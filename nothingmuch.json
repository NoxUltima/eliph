{
  "information_for_contributors": [
    "This file has been converted from https://github.com/atom/language-coffee-script/blob/master/grammars/coffeescript.cson",
    "This is an improved and expanded version of the CoffeeScript grammar files, which allows for more JavaScript syntax scopes and syntax highlighting support for embedded languages.",
    "Note that this grammar file is incomplete, many more changes will be made soon."
  ],
  "version": "https://github.com/atom/language-coffee-script/commit/0f6db9143663e18b1ad00667820f46747dba495e",
  "name": "CoffeeScript",
  "scopeName": "source.coffee",
  "patterns": [
    {
      "match": "\\b(debugger|infix|unary|oper(?:at|ator)?|\\\\)\\b",
      "name": "keyword.other.coffee"
    },
    {
      "name": "support.class.node.coffee",
      "match": "(?x)\\b(Buffer|EventEmitter|Server|Pipe|Socket|REPLServer|ReadStream|WriteStream|Stream\n  |Inflate|Deflate|InflateRaw|DeflateRaw|GZip|GUnzip|Unzip|Zip)\\b"
    },
    {
      "name": "support.variable.dom.coffee",
      "match": "\\b(document|event|navigator|performance|screen|window)\\b"
    },
    {
      "name": "support.class.builtin.coffee",
      "match": "(?x)\\b(Array|ArrayBuffer|Atomics|BigInt|BigInt64Array|BigUint64Array|Boolean|DataView|Date|Float32Array\n  |Float64Array|Function|Generator|GeneratorFunction|Int8Array|Int16Array|Int32Array|Intl|Map|Number|Object|Proxy\n  |Reflect|RegExp|Set|SharedArrayBuffer|SIMD|String|Symbol|TypedArray\n  |Uint8Array|Uint16Array|Uint32Array|Uint8ClampedArray|WeakMap|WeakSet)\\b"
    },
    {
      "name": "support.type.primitive.coffee",
      "match": "\\b(str(?:ing)?|cha?r|num(?:ber)?|big(?:int|deci(?:mal)?)|s?byte|u?(?:short|int|long)|[ic]?(?:float|double|real|dec(?:|i|imal)?)|u?i(?:nt)?(?:8|16|32|64|128)|f(?:loat)?(?:16|32|64|128)|bool(?:ean)?|frac(?:tion)?|(?:com)?plex|comp|sym(?:bol)?)\\b"
    },
    {
      "name": "support.type.builtin.coffee",
      "match": "\\b(re|regex|rec(?:ord)?|date|sym|symbol|weak(?:map|set)|any|never|unknown|auto|map|tuple|list|dict|obj(?:ect)?|arr(?:ay|aylist)?|frozen(?:set)?|coll(?:ect|ection)?|queue|deque)\\b"
    },
    {
      "name": "support.module.node.coffee",
      "match": "\\b(natives|buffer|child_process|cluster|crypto|dgram|dns|fs|http|https|net|os|path|punycode|string|string_decoder|readline|repl|tls|tty|util|vm|zlib)\\b"
    },
    { "name": "support.constant.math.coffee", "match": "\\b(Math)\\b" },
    { "name": "support.constant.json.coffee", "match": "\\b(JSON)\\b" },
    {
      "match": "\\b((Eval|Internal|Range|Reference|Syntax|Type|URI)?Error)\\b",
      "name": "support.class.error.coffee"
    },
    {
      "name": "support.class.dom.coffee",
      "match": "(?x)\\b(AnalyserNode|ArrayBufferView|Attr|AudioBuffer|AudioBufferSourceNode|AudioContext|AudioDestinationNode|AudioListener\n  |AudioNode|AudioParam|BatteryManager|BeforeUnloadEvent|BiquadFilterNode|Blob|BufferSource|ByteString|CSS|CSSConditionRule\n  |CSSCounterStyleRule|CSSGroupingRule|CSSMatrix|CSSMediaRule|CSSPageRule|CSSPrimitiveValue|CSSRule|CSSRuleList|CSSStyleDeclaration\n  |CSSStyleRule|CSSStyleSheet|CSSSupportsRule|CSSValue|CSSValueList|CanvasGradient|CanvasImageSource|CanvasPattern\n  |CanvasRenderingContext2D|ChannelMergerNode|ChannelSplitterNode|CharacterData|ChromeWorker|CloseEvent|Comment|CompositionEvent\n  |Console|ConvolverNode|Coordinates|Credential|CredentialsContainer|Crypto|CryptoKey|CustomEvent|DOMError|DOMException\n  |DOMHighResTimeStamp|DOMImplementation|DOMString|DOMStringList|DOMStringMap|DOMTimeStamp|DOMTokenList|DataTransfer\n  |DataTransferItem|DataTransferItemList|DedicatedWorkerGlobalScope|DelayNode|DeviceProximityEvent|DirectoryEntry\n  |DirectoryEntrySync|DirectoryReader|DirectoryReaderSync|Document|DocumentFragment|DocumentTouch|DocumentType|DragEvent\n  |DynamicsCompressorNode|Element|Entry|EntrySync|ErrorEvent|Event|EventListener|EventSource|EventTarget|FederatedCredential\n  |FetchEvent|File|FileEntry|FileEntrySync|FileException|FileList|FileReader|FileReaderSync|FileSystem|FileSystemSync\n  |FontFace|FormData|GainNode|Gamepad|GamepadButton|GamepadEvent|Geolocation|GlobalEventHandlers|HTMLAnchorElement\n  |HTMLAreaElement|HTMLAudioElement|HTMLBRElement|HTMLBaseElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement\n  |HTMLCollection|HTMLContentElement|HTMLDListElement|HTMLDataElement|HTMLDataListElement|HTMLDialogElement|HTMLDivElement\n  |HTMLDocument|HTMLElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFontElement|HTMLFormControlsCollection|HTMLFormElement\n  |HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement\n  |HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMediaElement\n  |HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement\n  |HTMLOptionsCollection|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement\n  |HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement\n  |HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableDataCellElement|HTMLTableElement|HTMLTableHeaderCellElement\n  |HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTimeElement|HTMLTitleElement|HTMLTrackElement\n  |HTMLUListElement|HTMLUnknownElement|HTMLVideoElement|HashChangeEvent|History|IDBCursor|IDBCursorWithValue|IDBDatabase\n  |IDBEnvironment|IDBFactory|IDBIndex|IDBKeyRange|IDBMutableFile|IDBObjectStore|IDBOpenDBRequest|IDBRequest|IDBTransaction\n  |IDBVersionChangeEvent|IIRFilterNode|IdentityManager|ImageBitmap|ImageBitmapFactories|ImageData|Index|InputDeviceCapabilities\n  |InputEvent|InstallEvent|InstallTrigger|KeyboardEvent|LinkStyle|LocalFileSystem|LocalFileSystemSync|Location|MIDIAccess\n  |MIDIConnectionEvent|MIDIInput|MIDIInputMap|MIDIOutputMap|MediaElementAudioSourceNode|MediaError|MediaKeyMessageEvent\n  |MediaKeySession|MediaKeyStatusMap|MediaKeySystemAccess|MediaKeySystemConfiguration|MediaKeys|MediaRecorder|MediaStream\n  |MediaStreamAudioDestinationNode|MediaStreamAudioSourceNode|MessageChannel|MessageEvent|MessagePort|MouseEvent\n  |MutationObserver|MutationRecord|NamedNodeMap|Navigator|NavigatorConcurrentHardware|NavigatorGeolocation|NavigatorID\n  |NavigatorLanguage|NavigatorOnLine|Node|NodeFilter|NodeIterator|NodeList|NonDocumentTypeChildNode|Notification\n  |OfflineAudioCompletionEvent|OfflineAudioContext|OscillatorNode|PageTransitionEvent|PannerNode|ParentNode|PasswordCredential\n  |Path2D|PaymentAddress|PaymentRequest|PaymentResponse|Performance|PerformanceEntry|PerformanceFrameTiming|PerformanceMark\n  |PerformanceMeasure|PerformanceNavigation|PerformanceNavigationTiming|PerformanceObserver|PerformanceObserverEntryList\n  |PerformanceResourceTiming|PerformanceTiming|PeriodicSyncEvent|PeriodicWave|Plugin|Point|PointerEvent|PopStateEvent\n  |PortCollection|Position|PositionError|PositionOptions|PresentationConnectionClosedEvent|PresentationConnectionList\n  |PresentationReceiver|ProcessingInstruction|ProgressEvent|PromiseRejectionEvent|PushEvent|PushRegistrationManager\n  |RTCCertificate|RTCConfiguration|RTCPeerConnection|RTCSessionDescriptionCallback|RTCStatsReport|RadioNodeList|RandomSource\n  |Range|ReadableByteStream|RenderingContext|SVGAElement|SVGAngle|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement\n  |SVGAnimateTransformElement|SVGAnimatedAngle|SVGAnimatedBoolean|SVGAnimatedEnumeration|SVGAnimatedInteger|SVGAnimatedLength\n  |SVGAnimatedLengthList|SVGAnimatedNumber|SVGAnimatedNumberList|SVGAnimatedPoints|SVGAnimatedPreserveAspectRatio\n  |SVGAnimatedRect|SVGAnimatedString|SVGAnimatedTransformList|SVGAnimationElement|SVGCircleElement|SVGClipPathElement\n  |SVGCursorElement|SVGDefsElement|SVGDescElement|SVGElement|SVGEllipseElement|SVGEvent|SVGFilterElement|SVGFontElement\n  |SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement\n  |SVGForeignObjectElement|SVGGElement|SVGGlyphElement|SVGGradientElement|SVGHKernElement|SVGImageElement|SVGLength\n  |SVGLengthList|SVGLineElement|SVGLinearGradientElement|SVGMPathElement|SVGMaskElement|SVGMatrix|SVGMissingGlyphElement\n  |SVGNumber|SVGNumberList|SVGPathElement|SVGPatternElement|SVGPoint|SVGPolygonElement|SVGPolylineElement|SVGPreserveAspectRatio\n  |SVGRadialGradientElement|SVGRect|SVGRectElement|SVGSVGElement|SVGScriptElement|SVGSetElement|SVGStopElement|SVGStringList\n  |SVGStylable|SVGStyleElement|SVGSwitchElement|SVGSymbolElement|SVGTRefElement|SVGTSpanElement|SVGTests|SVGTextElement\n  |SVGTextPositioningElement|SVGTitleElement|SVGTransform|SVGTransformList|SVGTransformable|SVGUseElement|SVGVKernElement\n  |SVGViewElement|ServiceWorker|ServiceWorkerContainer|ServiceWorkerGlobalScope|ServiceWorkerRegistration|ServiceWorkerState\n  |ShadowRoot|SharedWorker|SharedWorkerGlobalScope|SourceBufferList|StereoPannerNode|Storage|StorageEvent|StyleSheet\n  |StyleSheetList|SubtleCrypto|SyncEvent|Text|TextMetrics|TimeEvent|TimeRanges|Touch|TouchEvent|TouchList|Transferable\n  |TreeWalker|UIEvent|USVString|VRDisplayCapabilities|ValidityState|WaveShaperNode|WebGL|WebGLActiveInfo|WebGLBuffer\n  |WebGLContextEvent|WebGLFramebuffer|WebGLProgram|WebGLRenderbuffer|WebGLRenderingContext|WebGLShader|WebGLShaderPrecisionFormat\n  |WebGLTexture|WebGLTimerQueryEXT|WebGLTransformFeedback|WebGLUniformLocation|WebGLVertexArrayObject|WebGLVertexArrayObjectOES\n  |WebSocket|WebSockets|WebVTT|WheelEvent|Window|WindowBase64|WindowEventHandlers|WindowTimers|Worker|WorkerGlobalScope\n  |WorkerLocation|WorkerNavigator|XMLHttpRequest|XMLHttpRequestEventTarget|XMLSerializer|XPathExpression|XPathResult\n  |XSLTProcessor)\\b"
    },
    {
      "match": "\\b(console)\\b",
      "name": "support.type.object.console.coffee"
    },
    {
      "match": "((?<=console\\.)(debug|warn|info|log|error|time|timeEnd|assert))\\b",
      "name": "support.function.console.coffee"
    },
    {
      "match": "\\b(print|echo|put[sf]|debug|warn|info|log|error|time|timeEnd|assert)\\b",
      "name": "support.function.console.coffee"
    },
    {
      "match": "\\b(range|apply|call|concat|every|filter|forEach|hasOwnProperty|indexOf|isPrototypeOf|lastIndexOf|pop|propertyIsEnumerable|push|reduce(Right)?|reverse|shift|slice|some|sort|splice|to(Locale)?String|unshift|valueOf)\\b",
      "name": "support.function.method.array.coffee"
    },
    {
      "match": "((?<=\\.)(apply|call|concat|every|filter|forEach|from|hasOwnProperty|indexOf|isPrototypeOf|join|lastIndexOf|map|of|pop|propertyIsEnumerable|push|reduce(Right)?|reverse|shift|slice|some|sort|splice|to(Locale)?String|unshift|valueOf))\\b",
      "name": "support.function.method.array.coffee"
    },
    {
      "match": "\\b(isArray)\\b",
      "name": "support.function.static.array.coffee"
    },
    {
      "match": "((?<=Array\\.)(isArray))\\b",
      "name": "support.function.static.array.coffee"
    },
    {
      "match": "\\b(create|definePropert(ies|y)|freeze|getOwnProperty(Descriptors?|Names)|getProperty(Descriptor|Names)|getPrototypeOf|is(Extensible|Frozen|Sealed)|keys|preventExtensions|seal)\\b",
      "name": "support.function.static.object.coffee"
    },
    {
      "match": "((?<=Object\\.)(create|definePropert(ies|y)|freeze|getOwnProperty(Descriptors?|Names)|getProperty(Descriptor|Names)|getPrototypeOf|is(Extensible|Frozen|Sealed)?|isnt|keys|preventExtensions|seal))\\b",
      "name": "support.function.static.object.coffee"
    },
    {
      "match": "\\b(abs|acos|acosh|asin|asinh|atan|atan2|atanh|ceil|cos|cosh|exp|expm1|floor|hypot|log|log10|log1p|log2|max|min|pow|random|round|sign|sin|sinh|sqrt|tan|tanh|trunc)\\b",
      "name": "support.function.static.math.coffee"
    },
    {
      "match": "((?<=Math\\.)(abs|acos|acosh|asin|asinh|atan|atan2|atanh|ceil|cos|cosh|exp|expm1|floor|hypot|log|log10|log1p|log2|max|min|pow|random|round|sign|sin|sinh|sqrt|tan|tanh|trunc))\\b",
      "name": "support.function.static.math.coffee"
    },
    {
      "match": "\\b(is(Finite|Integer|NaN)|toInteger)\\b",
      "name": "support.function.static.number.coffee"
    },
    {
      "match": "((?<=Number\\.)(is(Finite|Integer|NaN)|toInteger))\\b",
      "name": "support.function.static.number.coffee"
    },
    { "include": "#coffeex" },
    {
      "match": "(instanceof)\\s+(?:(?:(class)\\s+(\\w+(?:\\.\\w*)*)?)|(\\w+(?:\\.\\w*)*))",
      "name": "meta.class.instance.constructor.coffee",
      "captures": {
        "1": { "name": "keyword.operator.expression.instanceof.coffee" },
        "2": { "name": "storage.type.class.coffee" },
        "3": { "name": "entity.name.type.instance.coffee" },
        "4": { "name": "entity.name.type.instance.coffee" }
      }
    },
    {
      "match": "(new)\\s+(?:(?:(class)\\s+(\\w+(?:\\.\\w*)*)?)|(\\w+(?:\\.\\w*)*))",
      "name": "meta.class.instance.constructor.coffee",
      "captures": {
        "1": { "name": "keyword.operator.new.coffee" },
        "2": { "name": "storage.type.class.coffee" },
        "3": { "name": "entity.name.type.instance.coffee" },
        "4": { "name": "entity.name.type.instance.coffee" }
      }
    },
    {
      "match": "(type)\\s+(?:(?:(class)\\s+(\\w+(?:\\.\\w*)*)?)|(\\w+(?:\\.\\w*)*))",
      "name": "meta.class.instance.constructor.coffee",
      "captures": {
        "1": { "name": "storage.type.type.coffee" },
        "2": { "name": "storage.type.class.coffee" },
        "3": { "name": "entity.name.type.alias.coffee" },
        "4": { "name": "entity.name.type.alias.coffee" }
      }
    },
    {
      "match": "(enum)\\s+(?:(?:(class)\\s+(\\w+(?:\\.\\w*)*)?)|(\\w+(?:\\.\\w*)*))",
      "name": "meta.class.instance.constructor.coffee",
      "captures": {
        "1": { "name": "storage.type.enum.coffee" },
        "2": { "name": "storage.type.class.coffee" },
        "3": { "name": "entity.name.type.enum.coffee" },
        "4": { "name": "entity.name.type.enum.coffee" }
      }
    },
    {
      "match": "(namespace)\\s+(?:(?:(class)\\s+(\\w+(?:\\.\\w*)*)?)|(\\w+(?:\\.\\w*)*))",
      "name": "meta.class.instance.constructor.coffee",
      "captures": {
        "1": { "name": "storage.type.namespace.coffee" },
        "2": { "name": "storage.type.class.coffee" },
        "3": { "name": "entity.name.type.module.coffee" },
        "4": { "name": "entity.name.type.module.coffee" }
      }
    },
    {
      "match": "(interface)\\s+(?:(?:(class)\\s+(\\w+(?:\\.\\w*)*)?)|(\\w+(?:\\.\\w*)*))",
      "name": "meta.class.instance.constructor.coffee",
      "captures": {
        "1": { "name": "storage.type.interface.coffee" },
        "2": { "name": "storage.type.class.coffee" },
        "3": { "name": "entity.name.type.interface.coffee" },
        "4": { "name": "entity.name.type.interface.coffee" }
      }
    },
    {
      "patterns": [
        {
          "begin": "\\\\([\\\\)\\s,\\};\\]])?",
          "beginCaptures": { "0": { "name": "string.template.coffee" } },
          "end": "([\\\\)\\s\\}\\.,;:\\n\\r\\t\\]])",
          "endCaptures": {
            "0": { "name": "punctuation.definition.string.end.livescript" }
          },
          "contentName": "string.template.coffee"
        }
      ]
    },
    {
      "begin": "['\"]{3,}",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.string.begin.coffee" }
      },
      "end": "['\"]{3,}",
      "endCaptures": {
        "0": { "name": "punctuation.definition.string.end.coffee" }
      },
      "name": "string.quoted.single.heredoc.coffee",
      "patterns": [
        {
          "captures": {
            "1": { "name": "punctuation.definition.escape.backslash.coffee" }
          },
          "match": "(\\\\).",
          "name": "constant.character.escape.backslash.coffee"
        }
      ]
    },
    {
      "begin": "['\"]{3,}",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.string.begin.coffee" }
      },
      "end": "['\"]{3,}",
      "endCaptures": {
        "0": { "name": "punctuation.definition.string.end.coffee" }
      },
      "name": "string.quoted.double.heredoc.coffee",
      "patterns": [
        {
          "captures": {
            "1": { "name": "punctuation.definition.escape.backslash.coffee" }
          },
          "match": "(\\\\).",
          "name": "constant.character.escape.backslash.coffee"
        },
        { "include": "#interpolated_coffee" }
      ]
    },
    {
      "match": "(?m)(`)([^`]*)(`)",
      "name": "string.quoted.script.coffee",
      "captures": {
        "1": { "name": "punctuation.definition.string.begin.coffee" },
        "2": {
          "name": "source.coffee.embedded.coffee",
          "patterns": [
            { "include": "source.js" },
            { "include": "#interpolated_coffee" }
          ]
        },
        "3": { "name": "punctuation.definition.string.end.coffee" }
      }
    },
    {
      "begin": "`",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.string.begin.coffee" }
      },
      "end": "`",
      "endCaptures": {
        "0": { "name": "punctuation.definition.string.end.coffee" }
      },
      "name": "source.coffee.embedded.coffee",
      "patterns": [
        { "include": "source.js" },
        { "include": "#interpolated_coffee" }
      ]
    },
    {
      "begin": "\\/{3}",
      "end": "(\\/{3})([gimsuy]*)",
      "name": "string.regexp.multiline.coffee",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.string.begin.coffee" }
      },
      "endCaptures": {
        "1": { "name": "punctuation.definition.string.end.coffee" },
        "2": { "name": "keyword.other.coffee" }
      },
      "patterns": [{ "include": "#heregexp" }]
    },
    {
      "begin": "(?<![\\w$])(/)(?=(?![/*+?])(.+)(/)[gimsuy]*(?!\\s*[\\w$/(]))",
      "beginCaptures": {
        "1": { "name": "punctuation.definition.string.begin.coffee" }
      },
      "end": "(/)([gimsuy]*)(?!\\s*[\\w$/(])",
      "endCaptures": {
        "1": { "name": "punctuation.definition.string.end.coffee" },
        "2": { "name": "keyword.other.coffee" }
      },
      "name": "string.regexp.coffee",
      "patterns": [{ "include": "#regexp" }]
    },
    {
      "begin": "#",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.comment.coffee" }
      },
      "end": "$",
      "name": "comment.line.number-sign.coffee"
    },
    {
      "begin": "(?<!#)#{3}(?!#)",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.comment.coffee" }
      },
      "end": "#{3}",
      "endCaptures": {
        "0": { "name": "punctuation.definition.comment.coffee" }
      },
      "name": "comment.block.coffee",
      "patterns": [
        { "include": "text.html.markdown#fenced_code_block" },
        { "include": "source.ts#docblock" },
        { "include": "text.html.markdown#inline" },
        {
          "match": "(?<=^|\\s)@\\w*(?=\\s)",
          "name": "storage.type.annotation.coffee"
        }
      ]
    },
    {
      "match": "\\b(?<![\\.\\$])(async|await)(?!\\s*:)\\b",
      "name": "storage.modifier.async.coffee"
    },
    {
      "match": "\\b(?<![\\.\\$])(imports?|require)(?!\\s*:)\\b",
      "name": "keyword.control.import.coffee"
    },
    {
      "match": "\\b(?<![\\.\\$])(exports?)(?!\\s*:)\\b",
      "name": "keyword.control.export.coffee"
    },
    {
      "match": "\\b(?<![\\.\\$])(default|module)(?!\\s*:)\\b",
      "name": "keyword.control.default.coffee"
    },
    {
      "match": "\\b(?<![\\.\\$])(return|yield|goto|guard|label)(?!\\s*:)\\b",
      "name": "keyword.control.flow.coffee"
    },
    {
      "match": "\\b(?<![\\.\\$])([gs]et)(?!\\s*:)\\b",
      "name": "storage.type.property.coffee"
    },
    {
      "match": "\\b(?<![\\.\\$])(begin|start|end|stop)(?!\\s*:)\\b",
      "name": "keyword.control.proc.coffee"
    },
    {
      "match": "\\b(?<![\\.\\$])(add|join|remove|select|group|sub|replace|keys?|val(?:ue)?s?|entr(?:y|ies)|index(?:es)?|indices|echo|print|puts|debug|warn|info|log|error|time|end|assert)(?!\\s*:)\\b",
      "name": "keyword.operator.expression.sub.coffee"
    },
    {
      "match": "\\b(?<![\\.\\$])(with|skip)(?!\\s*:)\\b",
      "name": "keyword.control.with.coffee"
    },
    {
      "match": "\\b(?<![\\.\\$])(then|(?:a|de)sc(?:end|ending)?|order(?:by)?)(?!\\s*:)\\b",
      "name": "keyword.control.then.coffee"
    },
    {
      "match": "\\b(?<![\\.\\$])(when|into|where|(?:rise|fall)(?:thr(?:u|ough))?|other(?:wise)?)(?!\\s*:)\\b",
      "name": "keyword.control.when.coffee"
    },
    {
      "match": "\\b(?<![\\.\\$])(catch|finally|throw|try|raise|except)(?!\\s*:)\\b",
      "name": "keyword.control.trycatch.coffee"
    },
    {
      "match": "\\b(?<![\\.\\$])(goto|break|continue|for|pass|while|until|do|loop|repeat|each|foreach|till)(?!\\s*:)\\b",
      "name": "keyword.control.loop.coffee"
    },
    {
      "match": "\\b(?<![\\.\\$])(if|else|unless|el(?:se?)?(?:if|un(?:less)?|ell?ess))(?!\\s*:)\\b",
      "name": "keyword.control.conditional.coffee"
    },
    {
      "match": "\\b(?<![\\.\\$])(case|default|switch)(?!\\s*:)\\b",
      "name": "keyword.control.switch.coffee"
    },
    {
      "name": "keyword.operator.expression.delete.coffee",
      "match": "(?<![_$[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:del|delete)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))"
    },
    {
      "name": "keyword.operator.expression.in.coffee",
      "match": "(?<![_$[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))in(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?!\\()"
    },
    {
      "name": "keyword.operator.expression.of.coffee",
      "match": "(?<![_$[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))of(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?!\\()"
    },
    {
      "name": "keyword.control.from.coffee",
      "match": "(?<![_$[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))from(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?!\\()"
    },
    {
      "name": "keyword.control.as.coffee",
      "match": "(?<![_$[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))a[st](?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?!\\()"
    },
    {
      "name": "keyword.operator.expression.to.coffee",
      "match": "(?<![_$[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))to(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?!\\()"
    },
    {
      "name": "keyword.operator.expression.til.coffee",
      "match": "(?<![_$[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))til(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?!\\()"
    },
    {
      "name": "keyword.operator.expression.downto.coffee",
      "match": "(?<![_$[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))downto(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?!\\()"
    },
    {
      "name": "keyword.operator.expression.downtil.coffee",
      "match": "(?<![_$[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))downtil(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?!\\()"
    },
    {
      "name": "keyword.operator.expression.by.coffee",
      "match": "(?<![_$[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))by(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?!\\()"
    },
    {
      "name": "keyword.operator.expression.own.coffee",
      "match": "(?<![_$[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))own(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?!\\()"
    },
    {
      "name": "keyword.operator.new.coffee",
      "match": "(?<![_$[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))new(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))"
    },
    {
      "name": "keyword.operator.expression.void.coffee",
      "match": "(?<![_$[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))void(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))"
    },
    {
      "name": "keyword.operator.expression.typeof.coffee",
      "match": "(?<![_$[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))typeof(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))"
    },
    {
      "name": "keyword.operator.expression.length.coffee",
      "match": "(?<![_$[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))len(?:gth)?(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))"
    },
    {
      "name": "keyword.operator.expression.sizeof.coffee",
      "match": "(?<![_$[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))size(?:of)?(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))"
    },
    {
      "name": "keyword.operator.expression.instanceof.coffee",
      "match": "(?<![_$[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))inst(?:ance)?of(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))"
    },
    {
      "match": "\\b(?<![\\.\\$])(va[rl]|defn?|define|let|const)(?!\\s*:)\\b",
      "name": "storage.type.coffee"
    },
    {
      "match": "\\b(?<![\\.\\$])(fn|fun(?:|c|ct|ction)|gen(?:fn)?)(?!\\s*:)\\b",
      "name": "storage.type.function.coffee"
    },
    {
      "match": "\\b(?<![\\.\\$])(enum)(?!\\s*:)\\b",
      "name": "storage.type.enum.coffee"
    },
    {
      "match": "\\b(?<![\\.\\$])(alias|type(?:alias|def)?)(?!\\s*:)\\b",
      "name": "storage.type.type.coffee"
    },
    {
      "match": "\\b(?<![\\.\\$])(interface)(?!\\s*:)\\b",
      "name": "storage.type.interface.coffee"
    },
    {
      "match": "\\b(?<![\\.\\$])((?:constru)?ctor|struct)(?!\\s*:)\\b",
      "name": "storage.type.struct.coffee"
    },
    {
      "match": "\\b(?<![\\.\\$])(pkg|package|namespace)(?!\\s*:)\\b",
      "name": "storage.type.namespace.coffee"
    },
    {
      "match": "\\b(?<![\\.\\$])((?:in|ex)tern(?:al)?|public|protected|internal|private|abstract|virtual|override|sealed|static|partial|readonly|volatile|extern|unsafe|final|mutable|transient|synchronized|dynamic|lock(?:ed)?|(?:im|ex)plicit|[dr]efer|delegate|(?:un)?check(?:ed)?)(?!\\s*:)\\b",
      "name": "storage.modifier.coffee"
    },
    {
      "match": "\\b(?<![\\.\\$])((?:im|ex)pl|ext|[dr]ef|dele|mut|dyna?|trans?|pub|pvt|priv|prot?|(?:in|ex)tern?|abst?|virt?|over|seal|sync|stat?|part?|read|vola?|fin)(?!\\s*:)\\b",
      "name": "storage.modifier.coffee"
    },
    {
      "match": "\\b(?<![\\.\\$])(native|__hasProp|__extends|__slice|__bind|__indexOf)(?!\\s*:)\\b",
      "name": "keyword.reserved.coffee"
    },
    {
      "match": "(?i)\\b(?<!\\.|::)(true|on|yes)(?!\\s*[:=][^=])\\b",
      "name": "constant.language.boolean.true.coffee"
    },
    {
      "match": "(?i)\\b(?<!\\.|::)(false|off|no)(?!\\s*[:=][^=])\\b",
      "name": "constant.language.boolean.false.coffee"
    },
    {
      "match": "(?i)\\b(?<!\\.|::)(null|nix|nil)(?!\\s*[:=][^=])\\b",
      "name": "constant.language.null.coffee"
    },
    {
      "match": "\\b(?<!\\.|::)(extends|implements|declare)(?!\\s*[:=])\\b",
      "name": "storage.modifier.coffee"
    },
    {
      "match": "(?<!\\.)\\b(?<!\\$)(super)(?!\\s*[:=][^=]|\\$)\\b",
      "name": "variable.language.super.coffee"
    },
    {
      "match": "(?<!\\.)\\b(?<!\\$)(this|that|it)(?!\\s*[:=][^=]|\\$)\\b",
      "name": "variable.language.this.coffee"
    },
    {
      "match": "(?<!\\.)\\b(?<!\\$)(arguments|args?|params?)(?!\\s*[:=][^=]|\\$)\\b",
      "name": "variable.language.arguments.coffee"
    },
    {
      "begin": "(?x)\n(?<=\\s|^)((@)?[a-zA-Z0-9$\\-_\\x{7f}-\\x{7fffffff}][\\w$]*)\n\\s*([:=])\\s*\n(?=(\\([^\\(\\)]*\\)\\s*)?[=-]>)",
      "beginCaptures": {
        "1": { "name": "entity.name.function.coffee" },
        "2": { "name": "variable.other.readwrite.instance.coffee" },
        "3": { "name": "keyword.operator.assignment.coffee" }
      },
      "end": "[=-]>",
      "endCaptures": { "0": { "name": "storage.type.function.coffee" } },
      "name": "meta.function.coffee",
      "patterns": [{ "include": "#function_params" }]
    },
    {
      "begin": "(?x)\n(?<=\\s|^)(?:((')([^']*?)('))|((\")([^\"]*?)(\")))\n\\s*([:=])\\s*\n(?=(\\([^\\(\\)]*\\)\\s*)?[=-]>)",
      "beginCaptures": {
        "1": { "name": "string.quoted.single.coffee" },
        "2": { "name": "punctuation.definition.string.begin.coffee" },
        "3": { "name": "entity.name.function.coffee" },
        "4": { "name": "punctuation.definition.string.end.coffee" },
        "5": { "name": "string.quoted.double.coffee" },
        "6": { "name": "punctuation.definition.string.begin.coffee" },
        "7": { "name": "entity.name.function.coffee" },
        "8": { "name": "punctuation.definition.string.end.coffee" },
        "9": { "name": "keyword.operator.assignment.coffee" }
      },
      "end": "[=-]>",
      "endCaptures": { "0": { "name": "storage.type.function.coffee" } },
      "name": "meta.function.coffee",
      "patterns": [{ "include": "#function_params" }]
    },
    {
      "begin": "(?=(\\([^\\(\\)]*\\)\\s*)?[=-]>)",
      "end": "[=-]>",
      "endCaptures": { "0": { "name": "storage.type.function.coffee" } },
      "name": "meta.function.inline.coffee",
      "patterns": [{ "include": "#function_params" }]
    },
    {
      "begin": "(?<=\\s|^)({)(?=[^'\"#]+?}[\\s\\]}]*=)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.destructuring.begin.bracket.curly.coffee"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.destructuring.end.bracket.curly.coffee"
        }
      },
      "name": "meta.variable.assignment.destructured.object.coffee",
      "patterns": [
        { "include": "$self" },
        {
          "match": "[a-zA-Z0-9$\\-_\\x{7f}-\\x{7fffffff}]\\w*",
          "name": "variable.assignment.coffee"
        }
      ]
    },
    {
      "begin": "(?<=\\s|^)(\\[)(?=[^'\"#]+?\\][\\s\\]}]*=)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.destructuring.begin.bracket.square.coffee"
        }
      },
      "end": "\\]",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.destructuring.end.bracket.square.coffee"
        }
      },
      "name": "meta.variable.assignment.destructured.array.coffee",
      "patterns": [
        { "include": "$self" },
        {
          "match": "[a-zA-Z0-9$\\-_\\x{7f}-\\x{7fffffff}]\\w*",
          "name": "variable.assignment.coffee"
        }
      ]
    },
    {
      "captures": {
        "1": { "name": "storage.type.class.coffee" },
        "2": { "name": "keyword.control.inheritance.coffee" },
        "3": { "name": "entity.other.inherited-class.coffee" }
      },
      "match": "(?<=\\s|^|\\[|\\()(class)\\s+(extends)\\s+(@?[a-zA-Z\\$\\._][\\w\\.]*)",
      "name": "meta.class.coffee"
    },
    {
      "captures": {
        "1": { "name": "storage.type.class.coffee" },
        "2": { "name": "entity.name.type.class.coffee" },
        "3": { "name": "keyword.control.inheritance.coffee" },
        "4": { "name": "entity.other.inherited-class.coffee" }
      },
      "match": "(?<=\\s|^|\\[|\\()(class\\b)\\s+(@?[a-zA-Z\\$_][\\w\\.]*)?(?:\\s+(extends)\\s+(@?[a-zA-Z\\$\\._][\\w\\.]*))?",
      "name": "meta.class.coffee"
    },
    {
      "match": "(?<!\\.)\\b(module|exports|__filename|__dirname|global|process)(?!\\s*:)\\b",
      "name": "support.variable.coffee"
    },
    {
      "match": "(?i)\\b(infi?n?|infinity)\\b",
      "name": "constant.language.infinity.coffee"
    },
    {
      "match": "(?i)\\b(undef(?:ined)?)\\b",
      "name": "constant.language.coffee"
    },
    { "match": "(?i)\\b(NaN)\\b", "name": "constant.language.nan.coffee" },
    { "include": "#operators" },
    { "include": "#method_calls" },
    { "include": "#function_calls" },
    { "include": "#numbers" },
    { "include": "#objects" },
    { "include": "#properties" },
    { "match": "::", "name": "keyword.operator.prototype.coffee" },
    {
      "match": "(?<!\\$)\\b[0-9]+[\\w$]*",
      "name": "invalid.illegal.identifier.coffee"
    },
    { "match": ";", "name": "punctuation.terminator.statement.coffee" },
    { "match": ",", "name": "punctuation.separator.delimiter.coffee" },
    {
      "begin": "{",
      "beginCaptures": { "0": { "name": "meta.brace.curly.coffee" } },
      "end": "}",
      "endCaptures": { "0": { "name": "meta.brace.curly.coffee" } },
      "patterns": [{ "include": "$self" }]
    },
    {
      "match": "\\s*+(\\#?)(\\$)([$\\w]*)",
      "captures": {
        "1": { "name": "keyword.operator.private.coffee" },
        "2": { "name": "punctuation.definition.variable.coffee" },
        "3": { "name": "variable.other.coffee" }
      }
    },
    {
      "match": "\\b([[:upper:]][_$[:digit:][:upper:]]*)\\b",
      "name": "variable.other.coffee"
    },
    {
      "begin": "<?\\[",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.array.begin.bracket.square.coffee"
        }
      },
      "end": "\\]>?",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.array.end.bracket.square.coffee"
        }
      },
      "patterns": [
        {
          "match": "(?<!\\.)\\.{3}",
          "name": "keyword.operator.slice.exclusive.coffee"
        },
        {
          "match": "(?<!\\.)\\.{2}",
          "name": "keyword.operator.slice.inclusive.coffee"
        },
        {
          "match": "[<>]:",
          "name": "keyword.operator.expression.of.coffee"
        },
        {
          "match": ":[<>]",
          "name": "keyword.operator.expression.by.coffee"
        },
        {
          "match": "><|<>",
          "name": "keyword.operator.expression.in.coffee"
        },
        {
          "match": "::",
          "name": "keyword.operator.prototype.coffee"
        },
        {
          "match": "[$#]",
          "name": "keyword.other.coffee"
        },
        { "include": "$self" }
      ]
    },
    {
      "begin": "\\(",
      "beginCaptures": { "0": { "name": "meta.brace.round.coffee" } },
      "end": "\\)",
      "endCaptures": { "0": { "name": "meta.brace.round.coffee" } },
      "patterns": [{ "include": "$self" }]
    },
    { "include": "#instance_variable" },
    { "include": "#single_quoted_string" },
    { "include": "#double_quoted_string" }
  ],
  "repository": {
    "arguments": {
      "patterns": [
        {
          "begin": "\\(",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.arguments.begin.bracket.round.coffee"
            }
          },
          "end": "\\)",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.arguments.end.bracket.round.coffee"
            }
          },
          "name": "meta.arguments.coffee",
          "patterns": [{ "include": "$self" }]
        },
        {
          "begin": "(?=(@|@?[\\w$]+|[=-]>|\\-\\d|\\[|{|\"|'))",
          "end": "(?=\\s*(?<![\\w$])(of|in|a[st]|from|(?:down)?(?:to|til)|then|is|isnt|n?(and|or)|x?nor|for|else|when|where|if|el(?:se?)?(?:if|un)|unless|by|with|instanceof|sub|repl?|replace|skip|till|each|foreach)(?![\\w$]))|(?=\\s*(}|\\]|\\)|#|$))",
          "name": "meta.arguments.coffee",
          "patterns": [{ "include": "$self" }]
        }
      ]
    },
    "double_quoted_string": {
      "patterns": [
        {
          "begin": "\"",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.string.begin.coffee" }
          },
          "end": "\"",
          "endCaptures": {
            "0": { "name": "punctuation.definition.string.end.coffee" }
          },
          "name": "string.quoted.double.coffee",
          "patterns": [
            {
              "captures": {
                "1": {
                  "name": "punctuation.definition.escape.backslash.coffee"
                }
              },
              "match": "(\\\\)(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)",
              "name": "constant.character.escape.backslash.coffee"
            },
            { "include": "#interpolated_coffee" }
          ]
        }
      ]
    },
    "function_calls": {
      "patterns": [
        {
          "begin": "(@)?([\\w$]+)(?=\\()",
          "beginCaptures": {
            "1": { "name": "variable.other.readwrite.instance.coffee" },
            "2": { "patterns": [{ "include": "#function_names" }] }
          },
          "end": "(?<=\\))",
          "name": "meta.function-call.coffee",
          "patterns": [{ "include": "#arguments" }]
        },
        {
          "begin": "(?x)\n(@)?([\\w$]+)\n\\s*\n(?=\\s+(?!(?<![\\w$])(of|in|a[st]|from|(?:down)?(?:to|til)|then|is|isnt|n?(and|or)|x?nor|for|else|when|where|if|el(?:se?)?(?:if|un)|unless|by|with|instanceof|sub|repl?|replace|skip|till|each|foreach)(?![\\w$]))(?=(@?[\\w$]+|[=-]>|\\-\\d|\\[|{|\"|')))",
          "beginCaptures": {
            "1": { "name": "variable.other.readwrite.instance.coffee" },
            "2": { "patterns": [{ "include": "#function_names" }] }
          },
          "end": "(?=\\s*(?<![\\w$])(of|in|a[st]|from|(?:down)?(?:to|til)|then|is|isnt|n?(and|or)|x?nor|for|else|when|where|if|el(?:se?)?(?:if|un)|unless|by|with|instanceof|sub|repl?|replace|skip|till|each|foreach)(?![\\w$]))|(?=\\s*(}|\\]|\\)|#|$))",
          "name": "meta.function-call.coffee",
          "patterns": [{ "include": "#arguments" }]
        }
      ]
    },
    "function_names": {
      "patterns": [
        {
          "match": "(?x)\n\\b(isNaN|isFinite|eval|uneval|parseInt|parseFloat|decodeURI|\ndecodeURIComponent|encodeURI|encodeURIComponent|escape|unescape|\nrequire|set(Interval|Timeout)|clear(Interval|Timeout))\\b",
          "name": "support.function.coffee"
        },
        {
          "match": "[_$a-zA-Z$_\\x{7f}-\\x{7fffffff}][a-zA-Z0-9$\\-_\\x{7f}-\\x{7fffffff}]*",
          "name": "entity.name.function.coffee"
        },
        { "match": "\\d[\\w$]*", "name": "invalid.illegal.identifier.coffee" }
      ]
    },
    "function_params": {
      "patterns": [
        {
          "begin": "\\(",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.parameters.begin.bracket.round.coffee"
            }
          },
          "end": "\\)",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.parameters.end.bracket.round.coffee"
            }
          },
          "name": "meta.parameters.coffee",
          "patterns": [
            {
              "match": "([_$a-zA-Z$_\\x{7f}-\\x{7fffffff}][a-zA-Z0-9$\\-_\\x{7f}-\\x{7fffffff}]*)(\\.\\.\\.)?",
              "captures": {
                "1": { "name": "variable.parameter.function.coffee" },
                "2": { "name": "keyword.operator.splat.coffee" }
              }
            },
            {
              "match": "(@(?:[_$a-zA-Z$_\\x{7f}-\\x{7fffffff}][a-zA-Z0-9$\\-_\\x{7f}-\\x{7fffffff}]*)?)(\\.\\.\\.)?",
              "captures": {
                "1": {
                  "name": "variable.parameter.function.readwrite.instance.coffee"
                },
                "2": { "name": "keyword.operator.splat.coffee" }
              }
            },
            { "include": "$self" }
          ]
        }
      ]
    },
    "embedded_comment": {
      "patterns": [
        {
          "captures": {
            "1": { "name": "punctuation.definition.comment.coffee" }
          },
          "match": "(?<!\\\\)(#).*$\\n?",
          "name": "comment.line.number-sign.coffee"
        }
      ]
    },
    "instance_variable": {
      "patterns": [
        {
          "match": "(@)([_$a-zA-Z$_\\x{7f}-\\x{7fffffff}][a-zA-Z0-9$\\-_\\x{7f}-\\x{7fffffff}]*)?",
          "name": "variable.other.readwrite.instance.coffee"
        }
      ]
    },
    "interpolated_coffee": {
      "patterns": [
        {
          "begin": "\\#\\{",
          "captures": {
            "0": { "name": "punctuation.section.embedded.coffee" }
          },
          "end": "\\}",
          "name": "source.coffee.embedded.source",
          "patterns": [{ "include": "$self" }]
        }
      ]
    },
    "method_calls": {
      "patterns": [
        {
          "begin": "(?:(\\.)|(::))\\s*([\\w$]+)\\s*(?=\\()",
          "beginCaptures": {
            "1": { "name": "punctuation.separator.method.period.coffee" },
            "2": { "name": "keyword.operator.prototype.coffee" },
            "3": { "patterns": [{ "include": "#method_names" }] }
          },
          "end": "(?<=\\))",
          "name": "meta.method-call.coffee",
          "patterns": [{ "include": "#arguments" }]
        },
        {
          "begin": "(?:(\\.)|(::))\\s*([\\w$]+)\\s*(?=\\s+(?!(?<![\\w$])(of|in|a[st]|from|(?:down)?(?:to|til)|then|is|isnt|n?(and|or)|x?nor|for|else|when|where|if|el(?:se?)?(?:if|un)|unless|by|with|instanceof|sub|repl?|replace|skip|till|each|foreach)(?![\\w$]))(?=(@|@?[\\w$]+|[=-]>|\\-\\d|\\[|{|\"|')))",
          "beginCaptures": {
            "1": { "name": "punctuation.separator.method.period.coffee" },
            "2": { "name": "keyword.operator.prototype.coffee" },
            "3": { "patterns": [{ "include": "#method_names" }] }
          },
          "end": "(?=\\s*(?<![\\w$])(of|in|a[st]|from|(?:down)?(?:to|til)|then|is|isnt|n?(and|or)|x?nor|for|else|when|where|if|el(?:se?)?(?:if|un)|unless|by|with|instanceof|sub|repl?|replace|skip|till|each|foreach)(?![\\w$]))|(?=\\s*(}|\\]|\\)|#|$))",
          "name": "meta.method-call.coffee",
          "patterns": [{ "include": "#arguments" }]
        }
      ]
    },
    "method_names": {
      "patterns": [
        {
          "match": "(?x)\n\\bon(Rowsinserted|Rowsdelete|Rowenter|Rowexit|Resize|Resizestart|Resizeend|Reset|\nReadystatechange|Mouseout|Mouseover|Mousedown|Mouseup|Mousemove|\nBefore(cut|deactivate|unload|update|paste|print|editfocus|activate)|\nBlur|Scrolltop|Submit|Select|Selectstart|Selectionchange|Hover|Help|\nChange|Contextmenu|Controlselect|Cut|Cellchange|Clock|Close|Deactivate|\nDatasetchanged|Datasetcomplete|Dataavailable|Drop|Drag|Dragstart|Dragover|\nDragdrop|Dragenter|Dragend|Dragleave|Dblclick|Unload|Paste|Propertychange|Error|\nErrorupdate|Keydown|Keyup|Keypress|Focus|Load|Activate|Afterupdate|Afterprint|Abort)\\b",
          "name": "support.function.event-handler.coffee"
        },
        {
          "match": "(?x)\n\\b(shift|showModelessDialog|showModalDialog|showHelp|scroll|scrollX|scrollByPages|\nscrollByLines|scrollY|scrollTo|stop|strike|sizeToContent|sidebar|signText|sort|\nsup|sub|substr|substring|splice|split|send|set(Milliseconds|Seconds|Minutes|Hours|\nMonth|Year|FullYear|Date|UTC(Milliseconds|Seconds|Minutes|Hours|Month|FullYear|Date)|\nTime|Hotkeys|Cursor|ZOptions|Active|Resizable|RequestHeader)|search|slice|\nsavePreferences|small|home|handleEvent|navigate|char|charCodeAt|charAt|concat|\ncontextual|confirm|compile|clear|captureEvents|call|createStyleSheet|createPopup|\ncreateEventObject|to(GMTString|UTCString|String|Source|UpperCase|LowerCase|LocaleString)|\ntest|taint|taintEnabled|indexOf|italics|disableExternalCapture|dump|detachEvent|unshift|\nuntaint|unwatch|updateCommands|join|javaEnabled|pop|push|plugins.refresh|paddings|parse|\nprint|prompt|preference|enableExternalCapture|exec|execScript|valueOf|UTC|find|file|\nfileModifiedDate|fileSize|fileCreatedDate|fileUpdatedDate|fixed|fontsize|fontcolor|\nforward|fromCharCode|watch|link|load|lastIndexOf|anchor|attachEvent|atob|apply|alert|\nabort|routeEvents|resize|resizeBy|resizeTo|recalc|returnValue|replace|reverse|reload|\nreleaseCapture|releaseEvents|go|get(Milliseconds|Seconds|Minutes|Hours|Month|Day|Year|FullYear|\nTime|Date|TimezoneOffset|UTC(Milliseconds|Seconds|Minutes|Hours|Day|Month|FullYear|Date)|\nAttention|Selection|ResponseHeader|AllResponseHeaders)|moveBy|moveBelow|moveTo|\nmoveToAbsolute|moveAbove|mergeAttributes|match|margins|btoa|big|bold|borderWidths|blink|back)\\b",
          "name": "support.function.coffee"
        },
        {
          "match": "(?x)\n\\b(acceptNode|add|addEventListener|addTextTrack|adoptNode|after|animate|append|\nappendChild|appendData|before|blur|canPlayType|captureStream|\ncaretPositionFromPoint|caretRangeFromPoint|checkValidity|clear|click|\ncloneContents|cloneNode|cloneRange|close|closest|collapse|\ncompareBoundaryPoints|compareDocumentPosition|comparePoint|contains|\nconvertPointFromNode|convertQuadFromNode|convertRectFromNode|createAttribute|\ncreateAttributeNS|createCaption|createCDATASection|createComment|\ncreateContextualFragment|createDocument|createDocumentFragment|\ncreateDocumentType|createElement|createElementNS|createEntityReference|\ncreateEvent|createExpression|createHTMLDocument|createNodeIterator|\ncreateNSResolver|createProcessingInstruction|createRange|createShadowRoot|\ncreateTBody|createTextNode|createTFoot|createTHead|createTreeWalker|delete|\ndeleteCaption|deleteCell|deleteContents|deleteData|deleteRow|deleteTFoot|\ndeleteTHead|detach|disconnect|dispatchEvent|elementFromPoint|elementsFromPoint|\nenableStyleSheetsForSet|entries|evaluate|execCommand|exitFullscreen|\nexitPointerLock|expand|extractContents|fastSeek|firstChild|focus|forEach|get|\ngetAll|getAnimations|getAttribute|getAttributeNames|getAttributeNode|\ngetAttributeNodeNS|getAttributeNS|getBoundingClientRect|getBoxQuads|\ngetClientRects|getContext|getDestinationInsertionPoints|getElementById|\ngetElementsByClassName|getElementsByName|getElementsByTagName|\ngetElementsByTagNameNS|getItem|getNamedItem|getSelection|getStartDate|\ngetVideoPlaybackQuality|has|hasAttribute|hasAttributeNS|hasAttributes|\nhasChildNodes|hasFeature|hasFocus|importNode|initEvent|insertAdjacentElement|\ninsertAdjacentHTML|insertAdjacentText|insertBefore|insertCell|insertData|\ninsertNode|insertRow|intersectsNode|isDefaultNamespace|isEqualNode|\nisPointInRange|isSameNode|item|key|keys|lastChild|load|lookupNamespaceURI|\nlookupPrefix|matches|move|moveAttribute|moveAttributeNode|moveChild|\nmoveNamedItem|namedItem|nextNode|nextSibling|normalize|observe|open|\nparentNode|pause|play|postMessage|prepend|preventDefault|previousNode|\npreviousSibling|probablySupportsContext|queryCommandEnabled|\nqueryCommandIndeterm|queryCommandState|queryCommandSupported|queryCommandValue|\nquerySelector|querySelectorAll|registerContentHandler|registerElement|\nregisterProtocolHandler|releaseCapture|releaseEvents|remove|removeAttribute|\nremoveAttributeNode|removeAttributeNS|removeChild|removeEventListener|\nremoveItem|replace|replaceChild|replaceData|replaceWith|reportValidity|\nrequestFullscreen|requestPointerLock|reset|scroll|scrollBy|scrollIntoView|\nscrollTo|seekToNextFrame|select|selectNode|selectNodeContents|set|setAttribute|\nsetAttributeNode|setAttributeNodeNS|setAttributeNS|setCapture|\nsetCustomValidity|setEnd|setEndAfter|setEndBefore|setItem|setNamedItem|\nsetRangeText|setSelectionRange|setSinkId|setStart|setStartAfter|setStartBefore|\nslice|splitText|stepDown|stepUp|stopImmediatePropagation|stopPropagation|\nsubmit|substringData|supports|surroundContents|takeRecords|terminate|toBlob|\ntoDataURL|toggle|toString|values|write|writeln)\\b",
          "name": "support.function.dom.coffee"
        },
        { "match": "[a-zA-Z_$][\\w$]*", "name": "entity.name.function.coffee" },
        { "match": "\\d[\\w$]*", "name": "invalid.illegal.identifier.coffee" }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.hex.coffee",
          "match": "\\b(?<!\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*([[:alpha:]])?\\b(?!\\$)",
          "captures": { "1": { "name": "storage.type.numeric.bigint.coffee" } }
        },
        {
          "name": "constant.numeric.binary.coffee",
          "match": "\\b(?<!\\$)0(?:b|B)[01][01_]*([[:alpha:]])?\\b(?!\\$)",
          "captures": { "1": { "name": "storage.type.numeric.bigint.coffee" } }
        },
        {
          "name": "constant.numeric.octal.coffee",
          "match": "\\b(?<!\\$)0(?:o|O)?[0-7][0-7_]*([[:alpha:]])?\\b(?!\\$)",
          "captures": { "1": { "name": "storage.type.numeric.bigint.coffee" } }
        },
        {
          "match": "(?x)\n(?<!\\$)(?:\n  (?:\\b[0-9]+(\\.)[0-9]+[eE][+-]?[0-9]+\\b)| # 1.1E+3\n  (?:\\b[0-9]+(\\.)[eE][+-]?[0-9]+\\b)|       # 1.E+3\n  (?:\\B(\\.)[0-9]+[eE][+-]?[0-9]+\\b)|       # .1E+3\n  (?:\\b[0-9]+[eE][+-]?[0-9]+\\b)|            # 1E+3\n  (?:\\b[0-9]+(\\.)[0-9]+\\b)|                # 1.1\n  (?:\\b[0-9]+(?=\\.{2,3}))|                  # 1 followed by a slice\n  (?:\\b[0-9]+(\\.)\\B)|                      # 1.\n  (?:\\B(\\.)[0-9]+\\b)|                      # .1\n  (?:\\b[0-9]+\\b(?!\\.))                     # 1\n)(?!\\$)",
          "captures": {
            "0": { "name": "constant.numeric.decimal.coffee" },
            "1": { "name": "punctuation.separator.decimal.period.coffee" },
            "2": { "name": "punctuation.separator.decimal.period.coffee" },
            "3": { "name": "punctuation.separator.decimal.period.coffee" },
            "4": { "name": "punctuation.separator.decimal.period.coffee" },
            "5": { "name": "punctuation.separator.decimal.period.coffee" },
            "6": { "name": "punctuation.separator.decimal.period.coffee" }
          }
        },
        {
          "name": "constant.numeric.decimal.coffee",
          "match": "\\b(?<!\\$)\\d[\\d]*(?:e[+-]\\d+)?([[:alpha:]])?\\b(?!\\$)",
          "captures": { "1": { "name": "storage.type.numeric.bigint.coffee" } }
        }
      ]
    },
    "objects": {
      "patterns": [
        {
          "match": "[A-Z][A-Z0-9_$]*(?=\\s*\\??(\\.\\s*[a-zA-Z_$]\\w*|::))",
          "name": "constant.other.object.coffee"
        },
        {
          "match": "[a-zA-Z_$][\\w$]*(?=\\s*\\??(\\.\\s*[a-zA-Z_$]\\w*|::))",
          "name": "variable.other.object.coffee"
        }
      ]
    },
    "properties": {
      "patterns": [
        {
          "match": "(?x) (?:(\\.)|(\\?\\.(?!\\s*[[:digit:]]))) \\s* (?:\n  (ATTRIBUTE_NODE|CDATA_SECTION_NODE|COMMENT_NODE|DOCUMENT_FRAGMENT_NODE|DOCUMENT_NODE|DOCUMENT_TYPE_NODE\n  |DOMSTRING_SIZE_ERR|ELEMENT_NODE|ENTITY_NODE|ENTITY_REFERENCE_NODE|HIERARCHY_REQUEST_ERR|INDEX_SIZE_ERR\n  |INUSE_ATTRIBUTE_ERR|INVALID_CHARACTER_ERR|NO_DATA_ALLOWED_ERR|NO_MODIFICATION_ALLOWED_ERR|NOT_FOUND_ERR\n  |NOT_SUPPORTED_ERR|NOTATION_NODE|PROCESSING_INSTRUCTION_NODE|TEXT_NODE|WRONG_DOCUMENT_ERR)\n  |\n  (_content|[xyz]|abbr|above|accept|acceptCharset|accessKey|action|align|[av]Link(?:color)?|all|alt|anchors|appCodeName\n  |appCore|applets|appMinorVersion|appName|appVersion|archive|areas|arguments|attributes|availHeight|availLeft|availTop\n  |availWidth|axis|background|backgroundColor|backgroundImage|below|bgColor|body|border|borderBottomWidth|borderColor\n  |borderLeftWidth|borderRightWidth|borderStyle|borderTopWidth|borderWidth|bottom|bufferDepth|callee|caller|caption\n  |cellPadding|cells|cellSpacing|ch|characterSet|charset|checked|childNodes|chOff|cite|classes|className|clear\n  |clientInformation|clip|clipBoardData|closed|code|codeBase|codeType|color|colorDepth|cols|colSpan|compact|complete\n  |components|content|controllers|cookie|cookieEnabled|cords|cpuClass|crypto|current|data|dateTime|declare|defaultCharset\n  |defaultChecked|defaultSelected|defaultStatus|defaultValue|defaultView|defer|description|dialogArguments|dialogHeight\n  |dialogLeft|dialogTop|dialogWidth|dir|directories|disabled|display|docmain|doctype|documentElement|elements|embeds\n  |enabledPlugin|encoding|enctype|entities|event|expando|external|face|fgColor|filename|firstChild|fontFamily|fontSize\n  |fontWeight|form|formName|forms|frame|frameBorder|frameElement|frames|hasFocus|hash|headers|height|history|host\n  |hostname|href|hreflang|hspace|htmlFor|httpEquiv|id|ids|ignoreCase|images|implementation|index|innerHeight|innerWidth\n  |input|isMap|label|lang|language|lastChild|lastIndex|lastMatch|lastModified|lastParen|layer[sXY]|left|leftContext\n  |lineHeight|link|linkColor|links|listStyleType|localName|location|locationbar|longDesc|lowsrc|lowSrc|marginBottom\n  |marginHeight|marginLeft|marginRight|marginTop|marginWidth|maxLength|media|menubar|method|mimeTypes|multiline|multiple\n  |name|nameProp|namespaces|namespaceURI|next|nextSibling|nodeName|nodeType|nodeValue|noHref|noResize|noShade|notationName\n  |notations|noWrap|object|offscreenBuffering|onLine|onreadystatechange|opener|opsProfile|options|oscpu|outerHeight\n  |outerWidth|ownerDocument|paddingBottom|paddingLeft|paddingRight|paddingTop|page[XY]|page[XY]Offset|parent|parentLayer\n  |parentNode|parentWindow|pathname|personalbar|pixelDepth|pkcs11|platform|plugins|port|prefix|previous|previousDibling\n  |product|productSub|profile|profileend|prompt|prompter|protocol|publicId|readOnly|readyState|referrer|rel|responseText\n  |responseXML|rev|right|rightContext|rowIndex|rows|rowSpan|rules|scheme|scope|screen[XY]|screenLeft|screenTop|scripts\n  |scrollbars|scrolling|sectionRowIndex|security|securityPolicy|selected|selectedIndex|selection|self|shape|siblingAbove\n  |siblingBelow|size|source|specified|standby|start|status|statusbar|statusText|style|styleSheets|suffixes|summary\n  |systemId|systemLanguage|tagName|tags|target|tBodies|text|textAlign|textDecoration|textIndent|textTransform|tFoot|tHead\n  |title|toolbar|top|type|undefined|uniqueID|updateInterval|URL|URLUnencoded|useMap|userAgent|userLanguage|userProfile\n  |vAlign|value|valueType|vendor|vendorSub|version|visibility|vspace|whiteSpace|width|X[MS]LDocument|zIndex))\\b(?!\\$|\\s*(<\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{([^\\{\\}]|\\{[^\\{\\}]*\\})*\\}))*\\})|(\\(([^\\(\\)]|(\\(([^\\(\\)]|\\([^\\(\\)]*\\))*\\)))*\\))|(\\[([^\\[\\]]|(\\[([^\\[\\]]|\\[[^\\[\\]]*\\])*\\]))*\\]))([^=<>]|=[^<]|\\<\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{([^\\{\\}]|\\{[^\\{\\}]*\\})*\\}))*\\})|(\\(([^\\(\\)]|(\\(([^\\(\\)]|\\([^\\(\\)]*\\))*\\)))*\\))|(\\[([^\\[\\]]|(\\[([^\\[\\]]|\\[[^\\[\\]]*\\])*\\]))*\\]))([^=<>]|=[^<]|\\<\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{([^\\{\\}]|\\{[^\\{\\}]*\\})*\\}))*\\})|(\\(([^\\(\\)]|(\\(([^\\(\\)]|\\([^\\(\\)]*\\))*\\)))*\\))|(\\[([^\\[\\]]|(\\[([^\\[\\]]|\\[[^\\[\\]]*\\])*\\]))*\\]))([^=<>]|=[^<])*\\>)*\\>)*>\\s*)?\\()",
          "captures": {
            "1": { "name": "punctuation.accessor.coffee" },
            "2": { "name": "punctuation.accessor.optional.coffee" },
            "3": { "name": "support.constant.dom.js" },
            "4": { "name": "support.variable.property.dom.js" }
          }
        },
        {
          "match": "(?x) (?:(\\.)|(\\?\\.(?!\\s*[[:digit:]]))) \\s* (?:\n  (?:(constructor|length|prototype|__proto__)\\b(?!\\$|\\s*(<\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=<>]|=[^<]|\\<\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=<>]|=[^<]|\\<\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=<>]|=[^<])*\\>)*\\>)*>\\s*)?\\())\n  |\n  (?:(EPSILON|MAX_SAFE_INTEGER|MAX_VALUE|MIN_SAFE_INTEGER|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY)\\b(?!\\$)))",
          "captures": {
            "1": { "name": "punctuation.accessor.coffee" },
            "2": { "name": "punctuation.accessor.optional.coffee" },
            "3": { "name": "support.variable.property.js" },
            "4": { "name": "support.constant.js" }
          }
        },
        {
          "match": "(?<![_$[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(?:(exports)|(module)(?:(?:(\\.)|(\\?\\.(?!\\s*[[:digit:]])))(exports|id|filename|loaded|parent|children))?)\\b(?!\\$)",
          "captures": {
            "1": { "name": "support.type.object.module.coffee" },
            "2": { "name": "support.type.object.module.coffee" },
            "3": { "name": "punctuation.accessor.coffee" },
            "4": { "name": "punctuation.accessor.optional.coffee" },
            "5": { "name": "support.type.object.module.coffee" }
          }
        },
        {
          "name": "variable.other.constant.js.coffee",
          "match": "([[:upper:]][_$[:digit:][:upper:]]*)(?![_$\\-[:alnum:]])"
        },
        {
          "name": "variable.other.readwrite.js.coffee",
          "match": "[_$a-zA-Z$_\\x{7f}-\\x{7fffffff}][a-zA-Z0-9$\\-_\\x{7f}-\\x{7fffffff}]*"
        },
        {
          "match": "(?:(\\.)|(::)|(\\?\\.))\\s*([A-Z][A-Z0-9_$]*\\b\\$*)",
          "captures": {
            "1": { "name": "punctuation.accessor.coffee" },
            "2": { "name": "keyword.operator.prototype.coffee" },
            "3": { "name": "punctuation.accessor.optional.coffee" },
            "4": { "name": "meta.var.expr.coffee" }
          }
        },
        {
          "match": "(?:(\\.)|(::)|(\\?\\.))\\s*(\\$*[a-zA-Z_$][\\w$]*)",
          "captures": {
            "1": { "name": "punctuation.accessor.coffee" },
            "2": { "name": "keyword.operator.prototype.coffee" },
            "3": { "name": "punctuation.accessor.optional.coffee" },
            "4": { "name": "variable.other.property.coffee" }
          }
        },
        {
          "match": "(?:(\\.)|(::)|(\\?\\.))\\s*([0-9][\\w$]*)",
          "captures": {
            "1": { "name": "punctuation.accessor.coffee" },
            "2": { "name": "keyword.operator.prototype.coffee" },
            "3": { "name": "punctuation.accessor.optional.coffee" },
            "4": { "name": "invalid.illegal.identifier.coffee" }
          }
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "match": "(?:([a-zA-Z0-9$\\-_\\x{7f}-\\x{7fffffff}][\\w$]*)?\\s+|(?<![\\w$]))(and=|or=)",
          "captures": {
            "1": { "name": "variable.assignment.coffee" },
            "2": { "name": "keyword.operator.assignment.compound.coffee" }
          }
        },
        {
          "match": "([a-zA-Z0-9$\\-_\\x{7f}-\\x{7fffffff}][\\w$]*)?\\s*(%%?=|\\+=|-=|\\*\\*?=|~\\/=|\\/\\/?=|&&?=|\\|\\|?=|\\?=|(?<!\\()/=)",
          "captures": {
            "1": { "name": "variable.assignment.coffee" },
            "2": { "name": "keyword.operator.assignment.compound.coffee" }
          }
        },
        {
          "match": "([a-zA-Z0-9$\\-_\\x{7f}-\\x{7fffffff}][\\w$]*)?\\s*(&=|\\^=|<<=|>>=|>>>=|\\|=|[<>]\\?=|<\\/=|\\/>=)",
          "captures": {
            "1": { "name": "variable.assignment.coffee" },
            "2": {
              "name": "keyword.operator.assignment.compound.bitwise.coffee"
            }
          }
        },
        {
          "match": "!?~=|===?|!==?|[!=]~",
          "name": "keyword.operator.comparison.coffee"
        },
        {
          "match": "<<<?|>>>?",
          "name": "keyword.operator.bitwise.shift.coffee"
        },
        {
          "match": "[<>]\\?|<=|>=|<>|<|>|<=>|<\\/|\\/>",
          "name": "keyword.operator.relational.coffee"
        },
        { "match": "<\\|>|::", "name": "keyword.operator.prototype.coffee" },
        { "match": "<\\|+|\\|+>", "name": "keyword.operator.pipe.coffee" },
        {
          "match": "(?:~~?|==?|--)>|<(?:~~?|==|--?)",
          "name": "storage.type.function.arrow.coffee"
        },
        {
          "match": "&&|!|\\|\\||\\^\\^",
          "name": "keyword.operator.logical.coffee"
        },
        { "match": "--", "name": "keyword.operator.decrement.coffee" },
        { "match": "\\+\\+", "name": "keyword.operator.increment.coffee" },
        { "match": "\\.\\.\\.", "name": "keyword.operator.splat.coffee" },
        {
          "match": "[+\\-*%]|~?\\/",
          "name": "keyword.operator.arithmetic.coffee"
        },
        { "match": "&|\\||\\^|~", "name": "keyword.operator.bitwise.coffee" },
        { "match": "(?m)\\\\n", "name": "keyword.operator.ternary.coffee" },
        {
          "match": "([_$a-zA-Z$_\\x{7f}-\\x{7fffffff}][a-zA-Z0-9$\\-_\\x{7f}-\\x{7fffffff}]*)?\\s*(=(?!:))(?![>=])",
          "captures": {
            "1": { "name": "variable.assignment.coffee" },
            "2": { "name": "keyword.operator.assignment.coffee" }
          }
        },
        {
          "match": "([_$a-zA-Z$_\\x{7f}-\\x{7fffffff}][a-zA-Z0-9$\\-_\\x{7f}-\\x{7fffffff}]*)?\\s*(:(?!:))(?![>=])",
          "captures": {
            "1": { "name": "meta.object-literal.key.coffee" },
            "2": { "name": "keyword.operator.assignment.coffee" }
          }
        },
        {
          "match": "([_$a-zA-Z$_\\x{7f}-\\x{7fffffff}][a-zA-Z0-9$\\-_\\x{7f}-\\x{7fffffff}]*)?\\s*(:=(?!:))(?![>=])",
          "captures": {
            "1": { "name": "variable.other.constant.coffee" },
            "2": { "name": "keyword.operator.assignment.coffee" }
          }
        },
        {
          "match": "([_$a-zA-Z$_\\x{7f}-\\x{7fffffff}][a-zA-Z0-9$\\-_\\x{7f}-\\x{7fffffff}]*)?\\s*(\\.=(?!:))(?![>=])",
          "captures": {
            "1": { "name": "meta.var.expr.coffee" },
            "2": { "name": "keyword.operator.assignment.coffee" }
          }
        },
        {
          "match": "(\\?)[^\\.\\?]+?|(\\?\\.)\\s*(\\$*[a-zA-Z$_\\x{7f}-\\x{7fffffff}][\\w$]*)",
          "captures": {
            "1": { "name": "keyword.operator.existential.coffee" },
            "2": { "name": "punctuation.accessor.optional.coffee" },
            "3": { "name": "variable.other.property.coffee" }
          }
        },
        {
          "match": "(?x)\n\\b(?<![\\.\\$])\n(?:\n  (n?and|x?n?or|n(?:ot|eg)|iff) # logical\n  |([lg]te?|leg) # relational\n  |\n  (is(?:nt)?|eq|ne|sim|diff?) # comparison\n)\n(?!\\s*:)\\b",
          "captures": {
            "1": { "name": "keyword.operator.logical.coffee" },
            "2": { "name": "keyword.operator.relational.coffee" },
            "3": { "name": "keyword.operator.comparison.coffee" }
          }
        }
      ]
    },
    "single_quoted_string": {
      "patterns": [
        {
          "begin": "'",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.string.begin.coffee" }
          },
          "end": "'",
          "endCaptures": {
            "0": { "name": "punctuation.definition.string.end.coffee" }
          },
          "name": "string.quoted.single.coffee",
          "patterns": [
            {
              "captures": {
                "1": {
                  "name": "punctuation.definition.escape.backslash.coffee"
                }
              },
              "match": "(\\\\)(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)",
              "name": "constant.character.escape.backslash.coffee"
            }
          ]
        }
      ]
    },
    "heregexp": {
      "patterns": [
        {
          "match": "\\\\[bB]|\\^|\\$",
          "name": "keyword.control.anchor.regexp"
        },
        {
          "match": "\\\\[1-9]\\d*",
          "name": "keyword.other.back-reference.regexp"
        },
        {
          "match": "[?+*]|\\{(\\d+,\\d+|\\d+,|,\\d+|\\d+)\\}\\??",
          "name": "keyword.operator.quantifier.regexp"
        },
        { "match": "\\|", "name": "keyword.operator.or.regexp" },
        {
          "begin": "(\\()((\\?=)|(\\?!))",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.group.regexp" },
            "3": { "name": "meta.assertion.look-ahead.regexp" },
            "4": { "name": "meta.assertion.negative-look-ahead.regexp" }
          },
          "end": "(\\))",
          "endCaptures": {
            "1": { "name": "punctuation.definition.group.regexp" }
          },
          "name": "meta.group.assertion.regexp",
          "patterns": [{ "include": "#heregexp" }]
        },
        {
          "begin": "\\((\\?:)?",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.group.regexp" }
          },
          "end": "\\)",
          "endCaptures": {
            "0": { "name": "punctuation.definition.group.regexp" }
          },
          "name": "meta.group.regexp",
          "patterns": [{ "include": "#heregexp" }]
        },
        {
          "begin": "(\\[)(\\^)?",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.character-class.regexp" },
            "2": { "name": "keyword.operator.negation.regexp" }
          },
          "end": "(\\])",
          "endCaptures": {
            "1": { "name": "punctuation.definition.character-class.regexp" }
          },
          "name": "constant.other.character-class.set.regexp",
          "patterns": [
            {
              "captures": {
                "1": { "name": "constant.character.numeric.regexp" },
                "2": { "name": "constant.character.control.regexp" },
                "3": { "name": "constant.character.escape.backslash.regexp" },
                "4": { "name": "constant.character.numeric.regexp" },
                "5": { "name": "constant.character.control.regexp" },
                "6": { "name": "constant.character.escape.backslash.regexp" }
              },
              "match": "(?:.|(\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\\\c[A-Z])|(\\\\.))\\-(?:[^\\]\\\\]|(\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\\\c[A-Z])|(\\\\.))",
              "name": "constant.other.character-class.range.regexp"
            },
            { "include": "#regex-character-class" }
          ]
        },
        { "include": "#regex-character-class" },
        { "include": "#interpolated_coffee" },
        { "include": "#embedded_comment" }
      ]
    },
    "regexp": {
      "patterns": [
        {
          "name": "keyword.control.anchor.regexp",
          "match": "\\\\[bB]|\\^|\\$"
        },
        {
          "match": "\\\\[1-9]\\d*|\\\\k<([a-zA-Z_$][\\w$]*)>",
          "captures": {
            "0": { "name": "keyword.other.back-reference.regexp" },
            "1": { "name": "variable.other.regexp" }
          }
        },
        {
          "name": "keyword.operator.quantifier.regexp",
          "match": "[?+*]|\\{(\\d+,\\d+|\\d+,|,\\d+|\\d+)\\}\\??"
        },
        { "name": "keyword.operator.or.regexp", "match": "\\|" },
        {
          "name": "meta.group.assertion.regexp",
          "begin": "(\\()((\\?=)|(\\?!)|(\\?<=)|(\\?<!))",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.group.regexp" },
            "2": { "name": "punctuation.definition.group.assertion.regexp" },
            "3": { "name": "meta.assertion.look-ahead.regexp" },
            "4": { "name": "meta.assertion.negative-look-ahead.regexp" },
            "5": { "name": "meta.assertion.look-behind.regexp" },
            "6": { "name": "meta.assertion.negative-look-behind.regexp" }
          },
          "end": "(\\))",
          "endCaptures": {
            "1": { "name": "punctuation.definition.group.regexp" }
          },
          "patterns": [{ "include": "#regexp" }]
        },
        {
          "name": "meta.group.regexp",
          "begin": "\\((?:(\\?:)|(?:\\?<([a-zA-Z_$][\\w$]*)>))?",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.group.regexp" },
            "1": { "name": "punctuation.definition.group.no-capture.regexp" },
            "2": { "name": "variable.other.regexp" }
          },
          "end": "\\)",
          "endCaptures": {
            "0": { "name": "punctuation.definition.group.regexp" }
          },
          "patterns": [{ "include": "#regexp" }]
        },
        {
          "name": "constant.other.character-class.set.regexp",
          "begin": "(\\[)(\\^)?",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.character-class.regexp" },
            "2": { "name": "keyword.operator.negation.regexp" }
          },
          "end": "(\\])",
          "endCaptures": {
            "1": { "name": "punctuation.definition.character-class.regexp" }
          },
          "patterns": [
            {
              "name": "constant.other.character-class.range.regexp",
              "match": "(?:.|(\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\\\c[A-Z])|(\\\\.))\\-(?:[^\\]\\\\]|(\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\\\c[A-Z])|(\\\\.))",
              "captures": {
                "1": { "name": "constant.character.numeric.regexp" },
                "2": { "name": "constant.character.control.regexp" },
                "3": { "name": "constant.character.escape.backslash.regexp" },
                "4": { "name": "constant.character.numeric.regexp" },
                "5": { "name": "constant.character.control.regexp" },
                "6": { "name": "constant.character.escape.backslash.regexp" }
              }
            },
            { "include": "#regex-character-class" }
          ]
        },
        { "include": "#regex-character-class" }
      ]
    },
    "regex-character-class": {
      "patterns": [
        {
          "name": "constant.other.character-class.regexp",
          "match": "\\\\[wWsSdDtrnvf]|\\."
        },
        {
          "name": "constant.character.numeric.regexp",
          "match": "\\\\([0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4})"
        },
        { "name": "constant.character.control.regexp", "match": "\\\\c[A-Z]" },
        {
          "name": "constant.character.escape.backslash.regexp",
          "match": "\\\\."
        }
      ]
    },
    "coffeex": {
      "patterns": [
        { "include": "#coffeex-tag" },
        { "include": "#coffeex-end-tag" }
      ]
    },
    "coffeex-expression": {
      "begin": "{",
      "beginCaptures": { "0": { "name": "meta.brace.curly.coffee" } },
      "end": "}",
      "endCaptures": { "0": { "name": "meta.brace.curly.coffee" } },
      "patterns": [
        { "include": "#double_quoted_string" },
        { "include": "$self" }
      ]
    },
    "coffeex-attribute": {
      "patterns": [
        {
          "captures": {
            "1": { "name": "entity.other.attribute-name.coffee" },
            "2": { "name": "keyword.operator.assignment.coffee" }
          },
          "match": "(?:^|\\s+)([-\\w.]+)\\s*(=)"
        },
        { "include": "#double_quoted_string" },
        { "include": "#single_quoted_string" },
        { "include": "#coffeex-expression" }
      ]
    },
    "coffeex-tag": {
      "patterns": [
        {
          "begin": "(<)([_$a-zA-Z$_\\x{7f}-\\x{7fffffff}][a-zA-Z0-9$\\-_\\x{7f}-\\x{7fffffff}]*)",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.tag.coffee" },
            "2": { "name": "entity.name.tag.coffee" }
          },
          "end": "(/?>)",
          "name": "meta.tag.coffee",
          "patterns": [{ "include": "#coffeex-attribute" }]
        }
      ]
    },
    "coffeex-end-tag": {
      "patterns": [
        {
          "begin": "(</)([_$a-zA-Z$_\\x{7f}-\\x{7fffffff}][a-zA-Z0-9$\\-_\\x{7f}-\\x{7fffffff}]*)",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.tag.coffee" },
            "2": { "name": "entity.name.tag.coffee" }
          },
          "end": "(/?>)",
          "name": "meta.tag.coffee"
        }
      ]
    },
    "jsdocbody": {
      "begin": "(?<=/\\*\\*)([^*]|\\*(?!/))*$",
      "while": "(^|\\G)\\s*\\*(?!/)(?=([^*]|[*](?!/))*$)",
      "patterns": [
        { "include": "text.html.markdown#fenced_code_block" },
        { "include": "#example" },
        { "include": "source.ts#docblock" },
        { "include": "text.html.markdown#inline" }
      ]
    },
    "example": {
      "begin": "((@)example)\\s+(?=([^*]|[*](?!/))*$).*$",
      "while": "(^|\\G)\\s(?!@)(?=([^*]|[*](?!/))*$)",
      "beginCaptures": {
        "1": { "name": "storage.type.class.jsdoc" },
        "2": { "name": "punctuation.definition.block.tag.jsdoc" }
      },
      "contentName": "meta.embedded.block.example.source.ts",
      "patterns": [{ "include": "source.js.jsx" }]
    }
  }
}
